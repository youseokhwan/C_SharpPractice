Chapter 9 - 구조체와 클래스

스위프트에서는 구조체와 클래스가 거의 비슷해졌는데,
구조체는 인스턴스 값이고 클래스는 레퍼런스 값이라는 차이가 있다.

1. 구조체
- 구조체는 Type을 만드는 것과 같으므로 대문자로 시작해야 한다. (프로퍼티와 메서드는 소문자로 시작)
- 기본적으로 이름에 괄호를 붙힌 initializer를 사용하고, 사용자 정의 이니셜라이저를 만들 수도 있다. (11장에서 다룸)
```
struct BasicInformation {
    var name: String
    var age: Int
}

var basic: BasicInformation = BasicInformation(name: "ysh", age: 25)
```

2. 클래스
- 클래스 역시 Type을 정의하는 것이므로 대문자로 시작
- 상속은 :을 사용하는 것은 같으나 코틀린과 다르게 붙여쓰는 컨벤션을 사용(상속 자세한 건 18장)
- 구조체와 다르게 클래스는 레퍼런스 값이다. let으로 선언해도 프로퍼티의 내용은 변경할 수 있다.
- 사용자 정의 이니셜라이저는 역시 11장에서 다룸
```
let jenny: Person = Person()
jenny.height = 123.4
```
- deinit을 통해 디이니셜라이저를 구현할 수 있다.
```
class Person {
    var height: Float = 0.0
    var weight: Float = 0.0

    deinit {
        print("인스턴스 소멸")
    }
}

var yagom: Person? = Person()
yagom = nil // 소멸되고 print 출력
```
- 참조까지 같은지 확인하려면 ===, !== 연산자를 사용