Chapter 10 - 프로퍼티와 메서드

1. 프로퍼티
1-1. 저장 프로퍼티
- 인스턴스의 변수/상수
- 구조체는 자동으로 이니셜라이저를 생성해주지만 클래스는 기본값을 지정하지 않으면 이니셜라이저를 직접 구현해야 한다.
- lazy 키워드를 사용하면 지연 저장 프로퍼티를 만들 수 있다.

1-2. 연산 프로퍼티
- 특정 연산을 실행한 결괏값
- 저장 프로퍼티 뒤에 {}를 붙이고 구현
- 메서드보다 가독성이 좋은 장점이 있으나, 쓰기 프로퍼티를 구현하기는 힘든 단점이 있다.

+. 프로퍼티 감시자
- 값이 변경될때마다 호출
- 값이 변경되기 직전에 willSet이 호출되어 newValue를 사용할 수 있고,
  직후에는 didSet이 호출되어 oldValue를 사용할 수 있다.

1-3. 타입 프로퍼티
- static 키워드를 붙이면 각각의 인스턴스가 아닌 타입 자체에 속하는 타입 프로퍼티를 만들 수 있다.
- 인스턴스 없이도 사용할 수 있다.

2. 메서드
- Swift는 클래스 뿐만 아니라 구조체와 열거형에도 메서드를 작성할 수 있다.

2-1. 인스턴스 메서드
- 다른 언어들과 유사함
- 구조체나 열거형의 경우 값을 변경하는 경우 mutating 키워드를 붙여야 한다.

2-2. 타입 메서드
- 타입 프로퍼티와 비슷하게 타입 메서드는 타입 자체에서 호출이 가능한 메서드이다.
- static 키워드와 class 키워드가 있는데, static 키워드는 상속하여 오버라이딩이 불가능하다.